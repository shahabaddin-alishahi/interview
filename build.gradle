plugins {
	id 'org.springframework.boot' version '2.2.4.RELEASE'
	id 'io.spring.dependency-management' version '1.0.9.RELEASE'
	id 'java'
	id("org.flywaydb.flyway") version "5.0.7"
}

group = 'com.signicat'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

configurations.all {
	resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
	exclude module: "spring-boot-starter-tomcat"
	resolutionStrategy.eachDependency { DependencyResolveDetails details ->
		if (details.requested.group == 'org.apache.logging.log4j') {
			details.useVersion '2.17.2'
		}
	}
}
dependencies {
	compileOnly('org.springframework.boot:spring-boot-starter-jetty')
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly('org.springframework.boot:spring-boot-starter-aop')
	testImplementation 'org.springframework.security:spring-security-test'
	implementation("org.springframework.boot:spring-boot-starter-data-jpa")
	implementation("org.springframework.boot:spring-boot-starter-security")
	implementation("org.springframework.boot:spring-boot-starter-web")
	implementation("org.springframework.kafka:spring-kafka")
	implementation('io.jsonwebtoken:jjwt:0.9.1')
	testImplementation("org.springframework.kafka:spring-kafka-test")
	implementation 'org.flywaydb:flyway-core'
	implementation 'org.springframework.kafka:spring-kafka'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'org.postgresql:postgresql'
	annotationProcessor 'org.projectlombok:lombok'
	compileOnly('io.springfox:springfox-swagger2:2.9.2')
	compileOnly('io.springfox:springfox-swagger-ui:2.9.2')
	implementation 'org.apache.commons:commons-lang3:3.12.0'
	implementation 'commons-io:commons-io:2.11.0'
	implementation 'javax.validation:validation-api:2.0.1.Final'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.junit.jupiter:junit-jupiter-api'
	testImplementation 'org.junit.jupiter:junit-jupiter-engine'


}

tasks.named('test') {
	useJUnitPlatform()
}
